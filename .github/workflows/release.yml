name: Release
on: [push, workflow_dispatch, repository_dispatch]

permissions: write-all

jobs:
  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      build: ${{ steps.build-needed.outputs.build }}
    steps:
      - uses: actions/checkout@v3

      - uses: dorny/paths-filter@v2
        id: filter
        with:
          base: ${{ github.ref_name }}
          filters: |
            build:
              - 'br2-external/**'

      - name: check if release exists
        id: check-release
        run: |
          # gh release view returns non-zero if no such release exists
          echo "build=$(gh release view ${{ github.ref_name }} &> /dev/null && echo $? || echo $?)" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: check if build is needed
        id: build-needed
        run: |
          # Step outputs apparently are strings, so we have to compare against literals to avoid silly JS type coercion issues.
          echo "build=${{ steps.filter.outputs.build == 'true' || steps.check-release.outputs.build != '0' }}" >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.build == 'true' && !github.event.act }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: ~/.buildroot-ccache
          key: ${{ github.ref }}

      - name: build kernel
        run: ./scripts/compile.sh

      - name: send to releases
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: "${{ github.token }}"
          file: images.tar.xz
          asset_name: images.tar.xz
          tag: ${{ github.ref_name }}
          overwrite: true

  default-configuration-test:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ !failure() && !github.env.act }}
    steps:
      - uses: actions/checkout@v3

      - name: test
        uses: ./
        with:
          shared-dirs: tests 
          renode-run: |
            wget example.org
            gpiodetect
            sh gpio.sh
            sh i2c.sh
            python pyrav4l2/.github/save_examples.py pyrav4l2/README.md
            python examples/controls-enumeration.py
          devices: |
            vivid
            gpio 0 16
            i2c 0x1C
          python-packages: |
            git+https://github.com/antmicro/pyrav4l2.git@3c071a7494b6b67263c4dddb87b47025338fd960
            git+https://github.com/antmicro/tuttest.git@c44309e0365c54759fb36864fb77bf8b347bd647
          repos: https://github.com/antmicro/pyrav4l2.git pyrav4l2

