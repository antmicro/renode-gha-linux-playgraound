name: Renode linux runner action
description: Test your project inside emulated Linux
author: Antmicro

inputs:
  renode-run:
    description: Command or a list of commands to run in Renode
    required: true
  shared-dirs:
    description: Paths to shared directories
    required: false
    default:
  shared-dir:
    description: Path to shared directory (deprecated)
    required: false
    default: ""
  devices:
    description: Devices to set up
    required: false
    default: ""
  arch:
    despription: Processor architecture (currently only riscv64)
    required: false
    default: riscv64
  board:
    despription: Board
    required: false
    default: default
  resc:
    despription: Renode script
    required: false
    default: default
  repl:
    despription: Renode platform description
    required: false
    default: default
  kernel:
    description: Compiled linux image kernel + initramfs
    required: false
    default: ""
  image-type:
    desctiption: Type of the root filesystem method (currently only 'native')
    required: false
    default: native
  image:
    description: Linux root filesystem
    required: false
    default: ""
  python-packages:
    description: Custom python packages that will be sideloaded to emulated Linux
    required: false
    default: ""
  repos:
    description: Custom git repos that will be added to your shared dir
    required: false
    default: ""
  network:
    description: Enable network in the emulated Linux? true/false
    required: false
    default: true
  rootfs-size:
    description: Rootfs size
    required: false
    default: auto
  fail-fast:
    description: Fail fast
    required: false
    default: true


runs:
  using: composite
  steps:

    - id: check-required-python-version
      run: |
        printf -v VERSIONS '%s\n%s' "$(python3 --version | awk '{ print $2 }')" $PYTHON_VERSION
        if [[ "$VERSIONS" = "$(sort -V <<< "$VERSIONS")" ]]; then
          echo "Minimum Python version required is $PYTHON_VERSION"
          exit 1
        fi
      shell: bash
      env:
        PYTHON_VERSION: "3.10"

    - id: create-working-directory
      run: |
        mkdir -p ${GITHUB_ACTION_PATH}
      shell: bash

    - id: install-packages
      run: |
        cd ${GITHUB_ACTION_PATH} &&                                                                                                      \
        wget -q --no-verbose https://github.com/renode/renode/releases/download/v${RENODE_VERSION}/renode_${RENODE_VERSION}_amd64.deb && \
        sudo DEBIAN_FRONTEND=noninteractive apt-get -y install --no-install-recommends                                                   \
        ./renode_${RENODE_VERSION}_amd64.deb python3-venv &&                                                                             \
        sudo pip3 install -r requirements.txt
      shell: bash
      env:
        RENODE_VERSION: "1.13.3"

    - id: create-pip-virtual-environment
      run: cd ${GITHUB_ACTION_PATH} && mkdir -p venv-dir && python3 -m venv venv-dir
      shell: bash

    - id: test
      run: |
        cd ${GITHUB_ACTION_PATH} && sudo python3 action/run-in-renode.py \
        '${{ toJSON(inputs) }}' "${GITHUB_WORKSPACE}" "$ACTION_REPO" "$ACTION_REF"
      shell: bash
      env:
        # https://github.com/orgs/community/discussions/49245
        ACTION_REPO: ${{ github.action_repository || github.repository }}
        ACTION_REF: ${{ github.action_ref || github.ref_name }}
